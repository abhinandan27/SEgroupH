// import { Recurrent, layer } from './src/index';
// const { input, lstm, output, recurrent } = layer;
//
// const net = new Recurrent({
//   inputLayer: () => input({ width: 2 }),
//   hiddenLayers: [
//     (input, recurrentInput) => lstm({ height: 3 }, recurrentInput, input),
//   ],
//   outputLayer: input => output({ width: 1 }, input)
// });
//
// net.initialize();
//
// console.log(net.layers.map(layer => layer.constructor.name));
// net.train([
//   { input: [0, 0], output: [0] },
//   { input: [0, 1], output: [1] },
//   { input: [1, 0], output: [1] },
//   { input: [1, 1], output: [0] }
// ]);
// net.run([0, 0]); // [0]
// net.run([0, 1]); // [1]
// net.run([1, 0]); // [1]
// net.run([1, 1]); // [0]


import brain from './src/index';
let net = new brain.NeuralNetworkGPU();
console.log(net.train([
  { input: [0, 0], output: [0] },
  { input: [0, 1], output: [1] },
  { input: [1, 0], output: [1] },
  { input: [1, 1], output: [0] }
]));
let output = net.run([0, 0]);
console.log(output);
output = net.run([0, 1]);
console.log(output);
output = net.run([1, 0]);
console.log(output);
output = net.run([1, 1]);
console.log(output);